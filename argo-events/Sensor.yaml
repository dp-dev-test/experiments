apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: github-push-sensor
  namespace: argo-events
spec:
  dependencies:
    - name: github-push-dep
      eventSourceName: github-push
      eventName: repo-push
      filters:
        script: |
          -- Access the event body (the GitHub webhook payload)
          local payload = event.body

          -- Check if 'commits' array exists and iterate
          if payload and payload.commits then
              for _, commit in ipairs(payload.commits) do
                  -- Check added files
                  if commit.added then
                      for _, filepath in ipairs(commit.added) do
                          if type(filepath) == "string" and filepath:match("%.config$") then
                              print("Found a .config file in added files: " .. filepath)
                              return true -- Found a .config file, filter passes
                          end
                      end
                  end

                  -- Check modified files
                  if commit.modified then
                      for _, filepath in ipairs(commit.modified) do
                          if type(filepath) == "string" and filepath:match("%.config$") then
                              print("Found a .config file in modified files: " .. filepath)
                              return true -- Found a .config file, filter passes
                          end
                      end
                  end

                  -- Check removed files
                  if commit.removed then
                      for _, filepath in ipairs(commit.removed) do
                          if type(filepath) == "string" and filepath:match("%.config$") then
                              print("Found a .config file in removed files: " .. filepath)
                              return true -- Found a .config file, filter passes
                          end
                      end
                  end
              end
            print("No config files changes found in the payload")
            return false
          end
  triggers:
    - template:
        name: deploy-app-workflow
        k8s:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: deployment-
              spec:
                entrypoint: deploy-config-changes
                arguments:
                  parameters:
                    - name: repository
                      value: ""
                    - name: commit-id
                      value: ""
                templates:
                  - name: deploy-config-changes
                    steps:
                      - - name: validate-config
                          template: validate-repo-step
                      - - name: deploy-changes
                          template: deploy-step
                  - name: validate-repo-step
                    container:
                      image: alpine:latest
                      command: [sh, -c]
                      args:
                        [
                          "echo 'Validating repository: {{workflow.parameters.repository}}'",
                        ]
                  - name: deploy-step
                    container:
                      image: alpine:latest
                      command: [sh, -c]
                      args:
                        [
                          "echo 'Deploying changes for commit: {{workflow.parameters.commit-id}}'",
                        ]
        parameters:
          - src:
              dependencyName: github-push-dep
              dataKey: body.repository.full_name
            dest: spec.arguments.parameters.0.value
          - src:
              dependencyName: github-push-dep
              dataKey: body.head_commit.id
            dest: spec.arguments.parameters.1.value
      conditions: "github-push-dep"
      retryStrategy:
        limit: 3
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 30s